<?php
/**
 * ProviderApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Tequila API
 *
 * The purpose of this documentation is to provide developers an insight of how to interact with Mysterium Node via Tequila API. This should demonstrate all the possible API calls with described parameters and responses.
 *
 * The version of the OpenAPI document: dev
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProviderApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProviderApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getProviderActivityStats
     *
     * Provides Node activity stats.
     *
     */
    public function testGetProviderActivityStats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderConsumersCount
     *
     * Provides Node consumers number served during a period of time.
     *
     */
    public function testGetProviderConsumersCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderEarningsSeries
     *
     * Provides Node  time series metrics of earnings during a period of time.
     *
     */
    public function testGetProviderEarningsSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderQuality
     *
     * Provides Node quality.
     *
     */
    public function testGetProviderQuality()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderServiceEarnings
     *
     * Provides Node earnings per service and total earnings in the all network.
     *
     */
    public function testGetProviderServiceEarnings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderSessions
     *
     * Provides Node sessions data during a period of time.
     *
     */
    public function testGetProviderSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderSessionsCount
     *
     * Provides Node sessions number during a period of time.
     *
     */
    public function testGetProviderSessionsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderSessionsSeries
     *
     * Provides Node data series metrics of sessions started during a period of time.
     *
     */
    public function testGetProviderSessionsSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderTransferredData
     *
     * Provides total traffic served by the provider during a period of time.
     *
     */
    public function testGetProviderTransferredData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProviderTransferredDataSeries
     *
     * Provides Node data series metrics of transferred bytes.
     *
     */
    public function testGetProviderTransferredDataSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for monitoringAgentStatuses
     *
     * Provides Node connectivity statuses from monitoring agent.
     *
     */
    public function testMonitoringAgentStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for nodeStatus
     *
     * Provides Node proposal status.
     *
     */
    public function testNodeStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
